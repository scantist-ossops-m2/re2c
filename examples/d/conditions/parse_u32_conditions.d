/* Generated by re2c */
// re2d $INPUT -o $OUTPUT -ci
module main;

enum ERROR = ulong.max;
enum YYCONDTYPE {
	yycinit,
	yycbin,
	yycdec,
	yychex,
	yycoct
};


private void add(ulong BASE)(ref ulong u, int d) {
    u = u * BASE + d;
    if (u > uint.max) { u = ERROR; }
}

private ulong parse_u32(const(char)* s) {
    const(char)* cur = s, mar;
    YYCONDTYPE c = YYCONDTYPE.yycinit;
    ulong u = 0;

    
{
	char yych;
	switch (c) {
		case YYCONDTYPE.yycinit: goto yyc_init;
		case YYCONDTYPE.yycbin: goto yyc_bin;
		case YYCONDTYPE.yycdec: goto yyc_dec;
		case YYCONDTYPE.yychex: goto yyc_hex;
		case YYCONDTYPE.yycoct: goto yyc_oct;
		default: assert(false);
	}
/* *********************************** */
yyc_init:
	yych = *cur;
	switch (yych) {
		case '0': goto yy2;
		case '1': .. case '9': goto yy4;
		default: goto yy1;
	}
yy1:
	cur++;
	{ return ERROR; }
yy2:
	cur++;
	mar = cur;
	yych = *cur;
	switch (yych) {
		case 'B':
		case 'b': goto yy5;
		case 'X':
		case 'x': goto yy7;
		default: goto yy3;
	}
yy3:
	c = YYCONDTYPE.yycoct;
	goto yyc_oct;
yy4:
	cur++;
	cur += -1;
	c = YYCONDTYPE.yycdec;
	goto yyc_dec;
yy5:
	cur++;
	yych = *cur;
	switch (yych) {
		case '0': .. case '1': goto yy8;
		default: goto yy6;
	}
yy6:
	cur = mar;
	goto yy3;
yy7:
	cur++;
	yych = *cur;
	switch (yych) {
		case '0': .. case '9':
		case 'A': .. case 'F':
		case 'a': .. case 'f': goto yy9;
		default: goto yy6;
	}
yy8:
	cur++;
	cur += -1;
	c = YYCONDTYPE.yycbin;
	goto yyc_bin;
yy9:
	cur++;
	cur += -1;
	c = YYCONDTYPE.yychex;
	goto yyc_hex;
/* *********************************** */
yyc_bin:
	yych = *cur;
	switch (yych) {
		case 0x00: goto yy11;
		case '0': .. case '1': goto yy13;
		default: goto yy12;
	}
yy11:
	cur++;
	{ return u; }
yy12:
	cur++;
	{ return ERROR; }
yy13:
	cur++;
	{ add!(2)(u,  cur[-1] - '0');      goto yyc_bin; }
/* *********************************** */
yyc_dec:
	yych = *cur;
	switch (yych) {
		case 0x00: goto yy15;
		case '0': .. case '9': goto yy17;
		default: goto yy16;
	}
yy15:
	cur++;
	{ return u; }
yy16:
	cur++;
	{ return ERROR; }
yy17:
	cur++;
	{ add!(10)(u, cur[-1] - '0');      goto yyc_dec; }
/* *********************************** */
yyc_hex:
	yych = *cur;
	switch (yych) {
		case 0x00: goto yy19;
		case '0': .. case '9': goto yy21;
		case 'A': .. case 'F': goto yy22;
		case 'a': .. case 'f': goto yy23;
		default: goto yy20;
	}
yy19:
	cur++;
	{ return u; }
yy20:
	cur++;
	{ return ERROR; }
yy21:
	cur++;
	{ add!(16)(u, cur[-1] - '0');      goto yyc_hex; }
yy22:
	cur++;
	{ add!(16)(u, cur[-1] - 'A' + 10); goto yyc_hex; }
yy23:
	cur++;
	{ add!(16)(u, cur[-1] - 'a' + 10); goto yyc_hex; }
/* *********************************** */
yyc_oct:
	yych = *cur;
	switch (yych) {
		case 0x00: goto yy25;
		case '0': .. case '7': goto yy27;
		default: goto yy26;
	}
yy25:
	cur++;
	{ return u; }
yy26:
	cur++;
	{ return ERROR; }
yy27:
	cur++;
	{ add!(8)(u,  cur[-1] - '0');      goto yyc_oct; }
}

}



void main() {
    assert(parse_u32("") == ERROR);
    assert(parse_u32("1234567890") == 1234567890);
    assert(parse_u32("0b1101") == 13);
    assert(parse_u32("0x7Fe") == 2046);
    assert(parse_u32("0644") == 420);
    assert(parse_u32("9999999999") == ERROR);
}
